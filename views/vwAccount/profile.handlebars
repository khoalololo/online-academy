<div class="max-w-4xl mx-auto">
    <!-- Page Header -->
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900">My Profile</h1>
        <p class="mt-2 text-gray-600">Manage your account settings and preferences</p>
    </div>

    <!-- Success/Error Messages -->
    {{#if success_message}}
    <div class="bg-green-50 border-l-4 border-green-400 p-4 mb-6 rounded-lg" role="alert">
        <div class="flex">
            <svg class="h-5 w-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
            </svg>
            <p class="ml-3 text-sm text-green-700 font-medium">{{success_message}}</p>
        </div>
    </div>
    {{/if}}

    {{#if error_message}}
    <div class="bg-red-50 border-l-4 border-red-400 p-4 mb-6 rounded-lg" role="alert">
        <div class="flex">
            <svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
            </svg>
            <p class="ml-3 text-sm text-red-700 font-medium">{{error_message}}</p>
        </div>
    </div>
    {{/if}}

    <!-- Profile Information Card -->
    <div class="bg-white rounded-xl shadow-md overflow-hidden mb-6">
        <div class="p-6 bg-gradient-to-r from-indigo-600 to-purple-600">
            <div class="flex items-center space-x-4">
                {{#if user.avatar}}
                    <img src="{{user.avatar}}" alt="{{user.name}}" class="w-10 h-10 rounded-full object-cover border-2 border-gray-200">
                {{else}}
                    <div class="w-10 h-10 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold">
                        {{substring user.name 0 1}}
                    </div>
                {{/if}}
                <div class="text-white">
                    <h2 class="text-2xl font-bold">{{user.name}}</h2>
                    <p class="text-indigo-100">@{{user.username}}</p>
                    <p class="text-sm text-indigo-200 mt-1">
                        {{#if (eq user.permission_level 3)}}
                            <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-red-100 text-red-800">
                                Admin
                            </span>
                        {{else if (eq user.permission_level 2)}}
                            <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-purple-100 text-purple-800">
                                Instructor
                            </span>
                        {{else}}
                            <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800">
                                Student
                            </span>
                        {{/if}}
                    </p>
                </div>
            </div>
        </div>
        <!-- Avatar Upload Section -->
        <div class="p-6 border-b border-gray-200">
            <h3 class="text-lg font-bold text-gray-900 mb-4">Profile Picture</h3>
            <div class="flex items-center space-x-6">
                <div class="relative">
                    <img id="avatarPreview" 
                        src="{{#if user.avatar}}{{user.avatar}}{{else}}/static/images/default-avatar.png{{/if}}" 
                        alt="Avatar" 
                        class="w-32 h-32 rounded-full object-cover border-4 border-indigo-200">
                </div>
                <div>
                    <input type="file" 
                        id="avatarInput" 
                        accept="image/*" 
                        class="hidden">
                    <button onclick="document.getElementById('avatarInput').click()" 
                            class="inline-flex items-center px-4 py-2 bg-indigo-600 text-white font-semibold rounded-lg hover:bg-indigo-700 transition-colors">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"/>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"/>
                        </svg>
                        Choose Photo
                    </button>
                    <p class="text-xs text-gray-500 mt-2">JPG, PNG or GIF (max 5MB)</p>
                    {{#if user.avatar}}
                    <button onclick="deleteAvatar()" class="mt-2 text-xs text-red-600 hover:text-red-800 font-medium">
                        Remove picture
                    </button>
                    {{/if}}
                </div>
            </div>
        </div>
        <!-- Personal Information Form -->
        <div class="p-6 border-b border-gray-200">
            <h3 class="text-lg font-bold text-gray-900 mb-4">Personal Information</h3>
            <form method="post" action="/account/profile" class="space-y-4">
                <div>
                    <label for="username" class="block text-sm font-medium text-gray-700 mb-1">
                        Username
                    </label>
                    <input 
                        id="username" 
                        name="username" 
                        type="text" 
                        value="{{user.username}}" 
                        disabled 
                        class="block w-full px-4 py-2 rounded-lg border-gray-300 bg-gray-100 shadow-sm cursor-not-allowed">
                    <p class="mt-1 text-xs text-gray-500">Username cannot be changed</p>
                </div>

                <div>
                    <label for="name" class="block text-sm font-medium text-gray-700 mb-1">
                        Full Name <span class="text-red-500">*</span>
                    </label>
                    <input 
                        id="name" 
                        name="name" 
                        type="text" 
                        value="{{user.name}}" 
                        required 
                        class="block w-full px-4 py-2 rounded-lg border-gray-300 shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent">
                </div>

                <div>
                    <label for="email" class="block text-sm font-medium text-gray-700 mb-1">
                        Email Address <span class="text-red-500">*</span>
                    </label>
                    <input 
                        id="email" 
                        name="email" 
                        type="email" 
                        value="{{user.email}}" 
                        required 
                        class="block w-full px-4 py-2 rounded-lg border-gray-300 shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent">
                </div>

                <div>
                    <label for="dob" class="block text-sm font-medium text-gray-700 mb-1">
                        Date of Birth <span class="text-red-500">*</span>
                    </label>
                    <input 
                        id="dob" 
                        name="dob" 
                        type="date" 
                        value="{{formatDate user.dob 'YYYY-MM-DD'}}" 
                        required 
                        class="block w-full px-4 py-2 rounded-lg border-gray-300 shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent">
                </div>

                <div>
                    <label for="bio" class="block text-sm font-medium text-gray-700 mb-1">
                        Biography / About Me
                    </label>
                    <textarea 
                        id="bio" 
                        name="bio" 
                        rows="5" 
                        maxlength="1000"
                        class="block w-full px-4 py-2 rounded-lg border-gray-300 shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent resize-none"
                        placeholder="Tell others about yourself, your interests, and your background...">{{user.bio}}</textarea>
                    <p class="mt-1 text-xs text-gray-500">
                        {{#if (eq user.permission_level 2)}}
                            This will be displayed on your course pages (max 1000 characters)
                        {{else}}
                            Share a bit about yourself (max 1000 characters)
                        {{/if}}
                    </p>
                </div>

                <div class="pt-4">
                    <button 
                        type="submit" 
                        class="w-full inline-flex justify-center items-center px-6 py-3 border border-transparent rounded-lg shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                        </svg>
                        Update Profile
                    </button>
                </div>
            </form>
        </div>

        <!-- Change Password Form -->
        <div class="p-6">
            <h3 class="text-lg font-bold text-gray-900 mb-4">Change Password</h3>
            <form method="post" action="/account/change-password" class="space-y-4">
                <div>
                    <label for="oldPassword" class="block text-sm font-medium text-gray-700 mb-1">
                        Current Password <span class="text-red-500">*</span>
                    </label>
                    <input 
                        id="oldPassword" 
                        name="oldPassword" 
                        type="password" 
                        required 
                        class="block w-full px-4 py-2 rounded-lg border-gray-300 shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                        placeholder="Enter your current password">
                </div>

                <div>
                    <label for="newPassword" class="block text-sm font-medium text-gray-700 mb-1">
                        New Password <span class="text-red-500">*</span>
                    </label>
                    <input 
                        id="newPassword" 
                        name="newPassword" 
                        type="password" 
                        required 
                        minlength="6"
                        class="block w-full px-4 py-2 rounded-lg border-gray-300 shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                        placeholder="Enter new password (min. 6 characters)">
                    <p class="mt-1 text-xs text-gray-500">Password must be at least 6 characters long</p>
                </div>

                <div>
                    <label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-1">
                        Confirm New Password <span class="text-red-500">*</span>
                    </label>
                    <input 
                        id="confirmPassword" 
                        name="confirmPassword" 
                        type="password" 
                        required 
                        class="block w-full px-4 py-2 rounded-lg border-gray-300 shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                        placeholder="Confirm new password">
                </div>

                <div class="pt-4">
                    <button 
                        type="submit" 
                        class="w-full inline-flex justify-center items-center px-6 py-3 border border-transparent rounded-lg shadow-sm text-base font-medium text-white bg-gray-700 hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-colors">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"/>
                        </svg>
                        Change Password
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Quick Links -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
        {{#if (eq authUser.permission_level 1)}}
        <a href="/student/enrolled" 
           class="block p-6 bg-white rounded-lg shadow-md hover:shadow-lg transition-all">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <svg class="h-8 w-8 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">My Courses</p>
                    <p class="text-xs text-gray-500 mt-1">View enrolled courses</p>
                </div>
            </div>
        </a>

        <a href="/student/watchlist" 
           class="block p-6 bg-white rounded-lg shadow-md hover:shadow-lg transition-all">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <svg class="h-8 w-8 text-yellow-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"/>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Watchlist</p>
                    <p class="text-xs text-gray-500 mt-1">Saved courses</p>
                </div>
            </div>
        </a>

        <a href="/products" 
           class="block p-6 bg-white rounded-lg shadow-md hover:shadow-lg transition-all">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <svg class="h-8 w-8 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Browse</p>
                    <p class="text-xs text-gray-500 mt-1">Explore courses</p>
                </div>
            </div>
        </a>
        {{/if}}

        {{#if (eq authUser.permission_level 2)}}
        <a href="/instructor/courses" 
           class="block p-6 bg-white rounded-lg shadow-md hover:shadow-lg transition-all">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <svg class="h-8 w-8 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">My Courses</p>
                    <p class="text-xs text-gray-500 mt-1">View enrolled courses</p>
                </div>
            </div>
        </a>

        <a href="/instructor/create-course" 
           class="block p-6 bg-white rounded-lg shadow-md hover:shadow-lg transition-all">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <svg class="h-8 w-8 text-yellow-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Create Course</p>
                    <p class="text-xs text-gray-500 mt-1">Create a new course</p>
                </div>
            </div>
        </a>

        <a href="/instructor/dashboard" 
           class="block p-6 bg-white rounded-lg shadow-md hover:shadow-lg transition-all">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <svg class="h-8 w-8 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Dashboard</p>
                    <p class="text-xs text-gray-500 mt-1">Manage your courses</p>
                </div>
            </div>
        </a>
        {{/if}}

        {{#if (eq authUser.permission_level 3)}}
        <a href="/admin/dashboard" 
           class="block p-6 bg-white rounded-lg shadow-md hover:shadow-lg transition-all">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <svg class="h-8 w-8 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Admin Dashboard</p>
                    <p class="text-xs text-gray-500 mt-1">View admin dashboard</p>
                </div>
            </div>
        </a>

        <a href="/admin/categories" 
           class="block p-6 bg-white rounded-lg shadow-md hover:shadow-lg transition-all">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <svg class="h-8 w-8 text-yellow-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"/>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Manage Categories</p>
                    <p class="text-xs text-gray-500 mt-1">Edit and delete categories</p>
                </div>
            </div>
        </a>

        <a href="/admin/courses" 
           class="block p-6 bg-white rounded-lg shadow-md hover:shadow-lg transition-all">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <svg class="h-8 w-8 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Manage Courses</p>
                    <p class="text-xs text-gray-500 mt-1">Edit and delete courses</p>
                </div>
            </div>
        </a>
        <a href="/admin/users" 
           class="block p-6 bg-white rounded-lg shadow-md hover:shadow-lg transition-all">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <svg class="h-8 w-8 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"/>
                    </svg>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Manage Users</p>
                    <p class="text-xs text-gray-500 mt-1">Edit and delete users</p>
                </div>
            </div>
        </a>
        {{/if}}
    </div>
</div>

{{#section 'js'}}
<script>
// Password confirmation validation
document.querySelector('form[action="/account/change-password"]').addEventListener('submit', function(e) {
    const newPassword = document.getElementById('newPassword').value;
    const confirmPassword = document.getElementById('confirmPassword').value;

    if (newPassword !== confirmPassword) {
        e.preventDefault();
        Swal.fire({
            title: 'Error!',
            text: 'New passwords do not match.',
            icon: 'error',
            confirmButtonColor: '#4F46E5'
        });
    }
});

// Email format validation
const emailInput = document.getElementById('email');
if (emailInput) {
    emailInput.addEventListener('blur', function() {
        const email = this.value.trim();
        if (!validateEmail(email)) {
            showFieldError(this, 'Please enter a valid email address');
        } else {
            clearFieldError(this);
        }
    });
}

function validateEmail(email) {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(email);
}

// Date of Birth validation
const dobInput = document.getElementById('dob');
if (dobInput) {
    dobInput.addEventListener('change', function() {
        const dob = new Date(this.value);
        const age = calculateAge(dob);
        
        if (age < 18) {
            showFieldError(this, 'You must be at least 18 years old');
            this.value = ''; // Clear invalid date
        } else if (age > 120) {
            showFieldError(this, 'Please enter a valid date of birth');
            this.value = '';
        } else {
            clearFieldError(this);
        }
    });
}

function calculateAge(birthDate) {
    const today = new Date();
    let age = today.getFullYear() - birthDate.getFullYear();
    const monthDiff = today.getMonth() - birthDate.getMonth();
    
    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {
        age--;
    }
    
    return age;
}

//Bio field character count
const bioTextarea = document.getElementById('bio');
if (bioTextarea) {
    const maxLength = 1000;
    
    // Create character counter element
    const counterDiv = document.createElement('div');
    counterDiv.className = 'text-xs text-gray-500 mt-1 flex justify-between';
    counterDiv.innerHTML = `
        <span id="bioCharCount" class="font-medium">0 / ${maxLength} characters</span>
        <span id="bioWarning" class="text-yellow-600 font-semibold hidden">⚠️ Character limit approaching</span>
    `;
    
    // Insert counter after textarea
    bioTextarea.parentNode.appendChild(counterDiv);
    
    // Update counter on input
    bioTextarea.addEventListener('input', function() {
        const currentLength = this.value.length;
        const remaining = maxLength - currentLength;
        
        const charCount = document.getElementById('bioCharCount');
        const warning = document.getElementById('bioWarning');
        
        charCount.textContent = `${currentLength} / ${maxLength} characters`;
        
        // Color coding
        if (remaining < 0) {
            charCount.className = 'font-medium text-red-600';
            warning.textContent = '❌ Character limit exceeded!';
            warning.classList.remove('hidden');
        } else if (remaining < 100) {
            charCount.className = 'font-medium text-yellow-600';
            warning.textContent = '⚠️ Character limit approaching';
            warning.classList.remove('hidden');
        } else {
            charCount.className = 'font-medium text-gray-600';
            warning.classList.add('hidden');
        }
    });
    
    // Trigger initial count
    bioTextarea.dispatchEvent(new Event('input'));
}

// Profile form validation when submitting
document.querySelector('form[action="/account/profile"]').addEventListener('submit', function(e) {
    let isValid = true;
    
    // Validate email
    const email = emailInput.value.trim();
    if (!validateEmail(email)) {
        e.preventDefault();
        showFieldError(emailInput, 'Please enter a valid email address');
        isValid = false;
    }
    
    // Validate DOB
    if (dobInput.value) {
        const age = calculateAge(new Date(dobInput.value));
        if (age < 18 || age > 120) {
            e.preventDefault();
            showFieldError(dobInput, 'Please enter a valid date of birth (18+ years old)');
            isValid = false;
        }
    }
    
    // Validate bio length
    if (bioTextarea.value.length > 1000) {
        e.preventDefault();
        showFieldError(bioTextarea, 'Biography must not exceed 1000 characters');
        isValid = false;
    }
    
    if (!isValid) {
        Swal.fire({
            title: 'Validation Error',
            text: 'Please fix the errors in the form',
            icon: 'error',
            confirmButtonColor: '#4F46E5'
        });
    }
});
// Helpers to show and clear field errors
function showFieldError(field, message) {
    // Remove existing error
    clearFieldError(field);
    
    // Add error styling
    field.classList.add('border-red-500', 'focus:ring-red-500');
    field.classList.remove('border-gray-300', 'focus:ring-indigo-500');
    
    // Create error message
    const errorDiv = document.createElement('div');
    errorDiv.className = 'field-error text-red-600 text-xs mt-1 font-medium';
    errorDiv.textContent = message;
    
    // Insert error message
    field.parentNode.appendChild(errorDiv);
}

function clearFieldError(field) {
    // Remove error styling
    field.classList.remove('border-red-500', 'focus:ring-red-500');
    field.classList.add('border-gray-300', 'focus:ring-indigo-500');
    
    // Remove error message
    const existingError = field.parentNode.querySelector('.field-error');
    if (existingError) {
        existingError.remove();
    }
}

// Preview and upload avatar
document.getElementById('avatarInput').addEventListener('change', async function(e) {
    const file = e.target.files[0];
    if (!file) return;

    // Validate file type
    if (!file.type.startsWith('image/')) {
        Swal.fire({
            title: 'Invalid File',
            text: 'Please select an image file',
            icon: 'error',
            confirmButtonColor: '#4F46E5'
        });
        return;
    }

    // Validate file size (5MB)
    if (file.size > 5 * 1024 * 1024) {
        Swal.fire({
            title: 'File Too Large',
            text: 'Image must be less than 5MB',
            icon: 'error',
            confirmButtonColor: '#4F46E5'
        });
        return;
    }

    // Preview image
    const reader = new FileReader();
    reader.onload = function(event) {
        document.getElementById('avatarPreview').src = event.target.result;
    };
    reader.readAsDataURL(file);

    // Upload image
    const formData = new FormData();
    formData.append('avatar', file);

    try {
        const response = await fetch('/upload/avatar', {
            method: 'POST',
            body: formData
        });

        const data = await response.json();

        if (response.ok && data.success) {
            Swal.fire({
                title: 'Success!',
                text: 'Profile picture updated!',
                icon: 'success',
                confirmButtonColor: '#4F46E5',
                timer: 2000,
                showConfirmButton: false
            });
        } else {
            throw new Error(data.message || 'Upload failed');
        }
    } catch (error) {
        console.error('Upload error:', error);
        Swal.fire({
            title: 'Upload Failed',
            text: error.message || 'Failed to upload image. Please try again.',
            icon: 'error',
            confirmButtonColor: '#4F46E5'
        });
        // Revert preview on error
        document.getElementById('avatarPreview').src = '{{#if user.avatar}}{{user.avatar}}{{else}}/static/images/default-avatar.png{{/if}}';
    }
});

async function deleteAvatar() {
    const result = await Swal.fire({
        title: 'Remove Profile Picture?',
        text: 'Your profile picture will be removed',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#EF4444',
        confirmButtonText: 'Yes, remove it',
        cancelButtonColor: '#6B7280'
    });

    if (!result.isConfirmed) return;

    try {
        const response = await fetch('/upload/avatar', {
            method: 'DELETE'
        });

        const data = await response.json();

        if (response.ok && data.success) {
            document.getElementById('avatarPreview').src = '/static/images/default-avatar.png';
            Swal.fire({
                title: 'Removed!',
                text: 'Profile picture removed',
                icon: 'success',
                confirmButtonColor: '#4F46E5',
                timer: 1500,
                showConfirmButton: false
            }).then(() => location.reload());
        } else {
            throw new Error(data.message || 'Delete failed');
        }
    } catch (error) {
        console.error('Delete error:', error);
        Swal.fire({
            title: 'Error!',
            text: 'Failed to remove picture',
            icon: 'error',
            confirmButtonColor: '#4F46E5'
        });
    }
}
</script>
{{/section}}