<div class="max-w-7xl mx-auto">
    <!-- Page Header -->
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900">Manage Courses</h1>
        <p class="mt-2 text-gray-600">Oversee all courses on the platform</p>
    </div>

    <!-- Filters -->
    <div class="bg-white rounded-xl shadow-md p-6 mb-6">
        <form method="GET" action="/admin/courses">
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Search</label>
                    <input type="text" name="search" id="searchInput" 
                           value="{{searchParams.search}}"
                           placeholder="Search courses..."
                           class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Status</label>
                    <select name="status" id="statusFilter" 
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 bg-white">
                        <option value="">All Courses</option>
                        <option value="active" {{#if (eq searchParams.status "active")}}selected{{/if}}>Active Only</option>
                        <option value="disabled" {{#if (eq searchParams.status "disabled")}}selected{{/if}}>Disabled Only</option>
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Category</label>
                    <select name="category" id="categoryFilter"
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 bg-white">
                        <option value="">All Categories</option>
                        {{#each global_categories}}
                            <optgroup label="{{this.name}}">
                                <option value="{{this.id}}" {{#if (eq this.id ../searchParams.category)}}selected{{/if}}>
                                    {{this.name}} (All)
                                </option>
                                {{#each this.subcategories}}
                                    <option value="{{this.id}}" {{#if (eq this.id ../../searchParams.category)}}selected{{/if}}>
                                        {{this.name}}
                                    </option>
                                {{/each}}
                            </optgroup>
                        {{/each}}
                    </select>
                </div>
                <div class="flex items-end">
                    <button type="submit" 
                            class="w-full px-4 py-2 bg-indigo-600 text-white font-semibold rounded-lg hover:bg-indigo-700 transition">
                        Apply Filters
                    </button>
                </div>
            </div>
            
            <!-- Show active filters -->
            {{#if (or searchParams.search searchParams.status searchParams.category)}}
            <div class="mt-4 flex items-center space-x-2">
                <span class="text-sm text-gray-600">Active filters:</span>
                {{#if searchParams.search}}
                    <a href="?status={{searchParams.status}}&category={{searchParams.category}}"
                       class="inline-flex items-center px-3 py-1 bg-indigo-100 text-indigo-700 text-sm rounded-full hover:bg-indigo-200">
                        Search: "{{searchParams.search}}"
                        <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                        </svg>
                    </a>
                {{/if}}
                {{#if searchParams.status}}
                    <a href="?search={{searchParams.search}}&category={{searchParams.category}}"
                       class="inline-flex items-center px-3 py-1 bg-indigo-100 text-indigo-700 text-sm rounded-full hover:bg-indigo-200">
                        Status: {{searchParams.status}}
                        <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                        </svg>
                    </a>
                {{/if}}
                {{#if searchParams.category}}
                    <a href="?search={{searchParams.search}}&status={{searchParams.status}}"
                       class="inline-flex items-center px-3 py-1 bg-indigo-100 text-indigo-700 text-sm rounded-full hover:bg-indigo-200">
                        Category filter
                        <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                        </svg>
                    </a>
                {{/if}}
                <a href="/admin/courses" class="text-sm text-gray-600 hover:text-gray-900">Clear all</a>
            </div>
            {{/if}}
        </form>
    </div>

    <!-- Courses Grid -->
    {{#if courses.length}}
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {{#each courses}}
        <div class="bg-white rounded-xl shadow-md overflow-hidden hover:shadow-xl transition-all duration-300 {{#if this.is_disabled}}opacity-60{{/if}}">
            <!-- Course Image -->
            <div class="relative h-48 bg-gradient-to-br from-indigo-500 to-purple-600">
                <img src="{{#if this.thumbnail}}{{this.thumbnail}}{{else}}/static/images/default-course.png{{/if}}" 
                     alt="{{this.proname}}" 
                     class="w-full h-full object-cover">
                
                <!-- Status Badge -->
                <div class="absolute top-3 right-3">
                    {{#if this.is_disabled}}
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold bg-red-500 text-white">
                            Disabled
                        </span>
                    {{else}}
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold bg-green-500 text-white">
                            Active
                        </span>
                    {{/if}}
                </div>
            </div>

            <!-- Course Info -->
            <div class="p-6">
                <span class="inline-block bg-indigo-100 text-indigo-800 text-xs font-semibold px-2.5 py-0.5 rounded-full mb-2">
                    {{this.category_name}}
                </span>
                
                <h3 class="text-xl font-bold text-gray-900 mb-2 line-clamp-2">
                    {{this.proname}}
                </h3>
                
                <p class="text-sm text-gray-600 mb-4 line-clamp-2">
                    {{this.tinydes}}
                </p>

                <div class="flex items-center text-sm text-gray-500 mb-3">
                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                    </svg>
                    {{this.instructor_name}}
                </div>

                <!-- Stats -->
                <div class="grid grid-cols-3 gap-2 mb-4 pb-4 border-b">
                    <div class="text-center">
                        <p class="text-lg font-bold text-indigo-600">{{formatNumber this.enrollment_count}}</p>
                        <p class="text-xs text-gray-500">Students</p>
                    </div>
                    <div class="text-center">
                        <p class="text-lg font-bold text-yellow-500">{{toFixed this.average_rating 1}}</p>
                        <p class="text-xs text-gray-500">Rating</p>
                    </div>
                    <div class="text-center">
                        <p class="text-lg font-bold text-gray-700">{{this.rating_count}}</p>
                        <p class="text-xs text-gray-500">Reviews</p>
                    </div>
                </div>

                <!-- Price -->
                <div class="mb-4">
                    {{#if this.promo_price}}
                        <span class="text-2xl font-bold text-red-600">${{formatNumber this.promo_price}}</span>
                        <span class="ml-2 text-sm text-gray-500 line-through">${{formatNumber this.price}}</span>
                    {{else}}
                        <span class="text-2xl font-bold text-gray-900">${{formatNumber this.price}}</span>
                    {{/if}}
                </div>

                <!-- Action Buttons -->
                <div class="flex space-x-2">
                    <a href="/products/{{this.proid}}" 
                       class="flex-1 text-center px-4 py-2 bg-indigo-100 text-indigo-700 text-sm font-semibold rounded-lg hover:bg-indigo-200 transition-colors">
                        View
                    </a>
                    <button onclick="toggleCourseStatus({{this.proid}}, {{this.is_disabled}})" 
                            class="flex-1 px-4 py-2 text-sm font-semibold rounded-lg transition-colors {{#if this.is_disabled}}bg-green-100 text-green-700 hover:bg-green-200{{else}}bg-yellow-100 text-yellow-700 hover:bg-yellow-200{{/if}}">
                        {{#if this.is_disabled}}Enable{{else}}Disable{{/if}}
                    </button>
                    <button onclick="deleteCourse({{this.proid}}, '{{this.proname}}')" 
                            class="px-4 py-2 bg-red-100 text-red-600 text-sm font-semibold rounded-lg hover:bg-red-200 transition-colors"
                            title="Delete course">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
        {{/each}}
    </div>

    <!-- Pagination -->
    {{#if (gt pagination.totalPages 1)}}
    <nav aria-label="Page navigation" class="mt-10 flex justify-center">
        <ul class="inline-flex items-center space-x-2">
            <li>
                <a href="?page={{sub pagination.page 1}}&search={{searchParams.search}}&status={{searchParams.status}}&category={{searchParams.category}}" 
                   class="px-3 py-2 rounded-lg border text-sm font-medium {{#if (gt pagination.page 1)}}text-indigo-700 bg-white hover:bg-gray-100 border-gray-300{{else}}text-gray-400 bg-gray-100 border-gray-200 cursor-not-allowed{{/if}}">
                    ‹ Prev
                </a>
            </li>
            {{#each pagination.pageNumbers}}
            <li>
                <a href="?page={{this.value}}&search={{../searchParams.search}}&status={{../searchParams.status}}&category={{../searchParams.category}}" 
                   class="px-3 py-2 rounded-lg border text-sm font-medium {{#if this.isCurrent}}bg-indigo-600 text-white border-indigo-600{{else}}text-indigo-700 bg-white hover:bg-gray-100 border-gray-300{{/if}}">
                    {{this.value}}
                </a>
            </li>
            {{/each}}
            <li>
                <a href="?page={{add pagination.page 1}}&search={{searchParams.search}}&status={{searchParams.status}}&category={{searchParams.category}}" 
                   class="px-3 py-2 rounded-lg border text-sm font-medium {{#if (lt pagination.page pagination.totalPages)}}text-indigo-700 bg-white hover:bg-gray-100 border-gray-300{{else}}text-gray-400 bg-gray-100 border-gray-200 cursor-not-allowed{{/if}}">
                    Next ›
                </a>
            </li>
        </ul>
    </nav>
    {{/if}}
    {{else}}
    <!-- Empty State -->
    <div class="text-center py-16 bg-white rounded-xl shadow-md">
        <svg class="mx-auto h-24 w-24 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
        </svg>
        <h3 class="mt-4 text-xl font-medium text-gray-900">No courses found</h3>
        <p class="mt-2 text-gray-500">Try adjusting your filters or search terms</p>
        {{#if (or searchParams.search searchParams.status searchParams.category)}}
            <a href="/admin/courses" class="mt-4 inline-block text-indigo-600 hover:text-indigo-700 font-semibold">
                Clear all filters
            </a>
        {{/if}}
    </div>
    {{/if}}
</div>

{{#section 'js'}}
<script>
// Toggle Course Status (Enable/Disable)
async function toggleCourseStatus(proid, isDisabled) {
    const action = isDisabled ? 'enable' : 'disable';
    
    const result = await Swal.fire({
        title: `${action.charAt(0).toUpperCase() + action.slice(1)} Course?`,
        text: `Are you sure you want to ${action} this course?`,
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: isDisabled ? '#10B981' : '#F59E0B',
        cancelButtonColor: '#6B7280',
        confirmButtonText: `Yes, ${action} it`
    });

    if (!result.isConfirmed) return;

    try {
        const response = await fetch(`/admin/courses/${proid}/toggle-disable`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        });

        const data = await response.json();

        if (response.ok) {
            Swal.fire({
                title: 'Success!',
                text: data.message,
                icon: 'success',
                confirmButtonColor: '#4F46E5'
            }).then(() => {
                location.reload();
            });
        } else {
            throw new Error(data.message);
        }
    } catch (error) {
        Swal.fire({
            title: 'Error!',
            text: error.message || 'Failed to update course status',
            icon: 'error',
            confirmButtonColor: '#4F46E5'
        });
    }
}

// Delete Course
async function deleteCourse(proid, courseName) {
    const result = await Swal.fire({
        title: 'Delete Course?',
        html: `Are you sure you want to permanently delete:<br><strong>${courseName}</strong>?<br><br><small class="text-red-600">This will delete all lessons, reviews, and enrollments. This action cannot be undone!</small>`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#EF4444',
        cancelButtonColor: '#6B7280',
        confirmButtonText: 'Yes, delete permanently',
        cancelButtonText: 'Cancel'
    });

    if (!result.isConfirmed) return;

    // Second confirmation
    const confirmResult = await Swal.fire({
        title: 'Final Confirmation',
        text: 'Type DELETE to confirm',
        input: 'text',
        inputPlaceholder: 'Type DELETE',
        showCancelButton: true,
        confirmButtonColor: '#EF4444',
        confirmButtonText: 'Confirm Delete',
        preConfirm: (value) => {
            if (value !== 'DELETE') {
                Swal.showValidationMessage('Please type DELETE to confirm');
                return false;
            }
            return true;
        }
    });

    if (!confirmResult.isConfirmed) return;

    try {
        const response = await fetch(`/admin/courses/${proid}/delete`, {
            method: 'DELETE'
        });

        const data = await response.json();

        if (response.ok) {
            Swal.fire({
                title: 'Deleted!',
                text: 'Course has been permanently deleted.',
                icon: 'success',
                confirmButtonColor: '#4F46E5'
            }).then(() => {
                location.reload();
            });
        } else {
            throw new Error(data.message);
        }
    } catch (error) {
        Swal.fire({
            title: 'Error!',
            text: error.message || 'Failed to delete course',
            icon: 'error',
            confirmButtonColor: '#4F46E5'
        });
    }
}
</script>
{{/section}}